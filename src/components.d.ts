/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface BubbleCheckbox {
    'color': string;
    'offText': string;
    'onText': string;
  }
  interface BubbleCheckboxAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'offText'?: string;
    'onText'?: string;
  }

  interface InputTag {
    'color': string;
    'placeholder': string;
  }
  interface InputTagAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'placeholder'?: string;
  }

  interface LoadingIndicator {
    'color': string;
    'text': string;
  }
  interface LoadingIndicatorAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'text'?: string;
  }

  interface SliderComponent {
    'color': string;
    'max': number;
    'min': number;
  }
  interface SliderComponentAttributes extends StencilHTMLAttributes {
    'color'?: string;
    'max'?: number;
    'min'?: number;
  }

  interface WelcomeComponent {}
  interface WelcomeComponentAttributes extends StencilHTMLAttributes {}
}

declare global {
  interface StencilElementInterfaces {
    'BubbleCheckbox': Components.BubbleCheckbox;
    'InputTag': Components.InputTag;
    'LoadingIndicator': Components.LoadingIndicator;
    'SliderComponent': Components.SliderComponent;
    'WelcomeComponent': Components.WelcomeComponent;
  }

  interface StencilIntrinsicElements {
    'bubble-checkbox': Components.BubbleCheckboxAttributes;
    'input-tag': Components.InputTagAttributes;
    'loading-indicator': Components.LoadingIndicatorAttributes;
    'slider-component': Components.SliderComponentAttributes;
    'welcome-component': Components.WelcomeComponentAttributes;
  }


  interface HTMLBubbleCheckboxElement extends Components.BubbleCheckbox, HTMLStencilElement {}
  var HTMLBubbleCheckboxElement: {
    prototype: HTMLBubbleCheckboxElement;
    new (): HTMLBubbleCheckboxElement;
  };

  interface HTMLInputTagElement extends Components.InputTag, HTMLStencilElement {}
  var HTMLInputTagElement: {
    prototype: HTMLInputTagElement;
    new (): HTMLInputTagElement;
  };

  interface HTMLLoadingIndicatorElement extends Components.LoadingIndicator, HTMLStencilElement {}
  var HTMLLoadingIndicatorElement: {
    prototype: HTMLLoadingIndicatorElement;
    new (): HTMLLoadingIndicatorElement;
  };

  interface HTMLSliderComponentElement extends Components.SliderComponent, HTMLStencilElement {}
  var HTMLSliderComponentElement: {
    prototype: HTMLSliderComponentElement;
    new (): HTMLSliderComponentElement;
  };

  interface HTMLWelcomeComponentElement extends Components.WelcomeComponent, HTMLStencilElement {}
  var HTMLWelcomeComponentElement: {
    prototype: HTMLWelcomeComponentElement;
    new (): HTMLWelcomeComponentElement;
  };

  interface HTMLElementTagNameMap {
    'bubble-checkbox': HTMLBubbleCheckboxElement
    'input-tag': HTMLInputTagElement
    'loading-indicator': HTMLLoadingIndicatorElement
    'slider-component': HTMLSliderComponentElement
    'welcome-component': HTMLWelcomeComponentElement
  }

  interface ElementTagNameMap {
    'bubble-checkbox': HTMLBubbleCheckboxElement;
    'input-tag': HTMLInputTagElement;
    'loading-indicator': HTMLLoadingIndicatorElement;
    'slider-component': HTMLSliderComponentElement;
    'welcome-component': HTMLWelcomeComponentElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
